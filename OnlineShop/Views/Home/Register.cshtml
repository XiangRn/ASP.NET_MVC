@model OnlineShop.Models.RegisterModel
@using BotDetect.Web.Mvc;

<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
      rel="stylesheet" type="text/css" />
@{
    MvcCaptcha registerCapcha = new MvcCaptcha("registerCapcha");

}
@{
    ViewBag.Title = "Đăng Ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section slide{
    <div class="inner_page-banner one-img">
    </div>
    <!--//banner -->
    <!-- short -->
    <div class="using-border py-3">
        <div class="inner_breadcrumb  ml-4">
            <ul class="short_ls">
                <li>
                    <a href="/trang-chu">Trang Chủ</a>
                    <span>/ /</span>
                </li>
                <li><a href="/dang-ky">Đăng Ký</a></li>
            </ul>
        </div>
    </div>
}
<section class="contact py-lg-4 py-md-3 py-sm-3 py-3">
    <div class="container py-lg-5 py-md-4 py-sm-4 py-3">
        <h3 class="title text-center mb-lg-5 mb-md-4 mb-sm-4 mb-3">Đăng Ký </h3>
        <div class="contact-list-grid">

            <div class=" agile-wls-contact-mid">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ProvinceID, new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlProvince" })
                            @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.DistrictID, new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlDistrict" })
                            @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group contact-forms">
                        @Html.LabelFor(model => model.TownID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.TownID, new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlTown" })
                            @Html.ValidationMessageFor(model => model.TownID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group contact-forms">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.Captcha(registerCapcha)
                            @Html.TextBox("CaptchaCode", null, new { required = "true" })
                        </div>
                    </div>

                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Đăng Ký" class="btn btn-block sent-butnn" />
                    </div>

                </div>
                }
            </div>

        </div>
    </div>
    <!--//contact-map -->
</section>
@section jsFooter{

    <script src="~/Assets/Client/js/controller/userController.js"></script>

}